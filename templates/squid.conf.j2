{{ ansible_managed | comment }}

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
acl localnet src 10.0.0.0/8    # RFC1918 possible internal network
#acl localnet src 172.16.0.0/12 # RFC1918 possible internal network
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network
#acl localnet src fc00::/7       # RFC 4193 local private network range
#acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines

acl SSL_ports port 443
acl Safe_ports port 80          # http
#acl Safe_ports port 21         # ftp
acl Safe_ports port 443         # https
#acl Safe_ports port 70         # gopher
acl Safe_ports port 1025-65535  # unregistered ports
acl CONNECT method CONNECT
{% if not (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18) and not (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) %}
{# built-in since squid 3.2 #}
acl localhost src 127.0.0.1/32
{% endif %}
{% for client in squid_allowed_clients %}
acl allowed_clients src {{ client }}
{% endfor %}

http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

cache_mgr {{ squid_cache_admin_email }}

# https://hub.packtpub.com/squid-proxy-server-fine-tuning-achieve-better-performance/
# depending on `free -m`
cache_mem 100 MB
# default is 512 KB
# maximum_object_size_in_memory 1 MB
{% if squid_dns_v4_first is undefined or squid_dns_v4_first and not ((ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 22) and squid_https_source_build|bool)%}
# https://serverfault.com/questions/644604/squid-https-tunnelling-using-connect-very-slow
dns_v4_first on
{% endif %}

# Suppress Squid version string info in HTTP headers and HTML error pages. = not valid/bungled(3.5.12)
httpd_suppress_version_string on
# Limit the size of acceptable HTTP headers.
request_header_max_size 64 KB
ignore_unknown_nameservers on

# Disable ICP and HTCP (communication with other caches)
icp_port 0
icp_access deny all
htcp_port 0
htcp_access deny all
snmp_port 0
snmp_access deny all

# Tuning
pipeline_prefetch 1
shutdown_lifetime 5 second

# own templates? http://www.squid-cache.org/Doc/config/error_directory/
#		 http://blog.squidblacklist.org/?p=707
#error_directory /path/to

{% if not (ansible_os_family == "RedHat" and ansible_distribution_version.split('.')[0] == '6') %}
# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

{% endif %}
# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
# https://wiki.squid-cache.org/SquidFaq/SquidAcl
#

acl proto_http proto http https


acl bad_tlds dstdomain .gdn .work .ltd .ooo .date .shop .racing .world .loan .tokyo .country .stream .gdn .mom .xin .kin .men .loan .download .racing
http_access deny bad_tlds

acl useragent_chrome browser Chrome
acl useragent_firefox browser Firefox
acl useragent_chrome browser Chrome/1[1-5][0-9]\.*
acl useragent_firefox browser Firefox/1[1-5][0-9]\.*
acl useragent_firefox_current browser Firefox\/114.*
acl useragent_firefox_current_esr browser Firefox\/102.*
acl useragent_msie browser MSIE
acl useragent_opera browser Opera
acl useragent_trident browser Trident
acl useragent_chrome_old browser Chrome/[1-6]?
http_access deny useragent_msie
http_access deny useragent_chrome_old

{% if squid_filter_ads is defined and squid_filter_ads %}
## disable ads ( http://pgl.yoyo.org/adservers/ )
acl ads dstdomain "/var/spool/squid/ad_block.txt"
http_access deny ads
#deny_info TCP_RESET ads

{% endif %}
{% for item in squid_list_templates_acl %}
acl {{ item.name }} {{ item.type }} "{{ item.d }}"
{% endfor %}
{% for item in squid_list_acl %}
acl {{ item.name }} {{ item.type }} {{ item.d }}
{% endfor %}
{% for item in squid_list_access %}
http_access {{ item.action }} {{ item.name }} {{ item.extraconditions | default('') }}
{% endfor %}

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
{% if squid_allow_localhost %}
http_access allow localhost
{% endif %}
{% if squid_allowed_clients != [] %}
http_access allow allowed_clients
{% endif %}

#\.exe(\?.*)?$
#\.msi(\?.*)?$
#\.msu(\?.*)?$
#\.torrent(\?.*)?$
#acl blockExtensions urlpath_regex -i "/etc/squid/blockExtensions.acl"
#http_access deny blockExtensions

# acl for logs to exclude from logging if too noisy and not useful (and possibly blocked)
#acl excludetrace dstdomain play.google.com
#acl excludetrace_mozilla dstdomain detectportal.firefox.com content-signature-2.cdn.mozilla.net push.services.mozilla.com firefox.settings.services.mozilla.com ocsp.comodoca.com

{% if squid_splash_enable is defined and squid_splash_enable %}
# https://wiki.squid-cache.org/ConfigExamples/Portal/Splash
# https://thejimmahknows.com/squid-proxy-splash-page-2/
# https://github.com/tombatossals/squid_guifi_splash
# -t <idle_timeout>
# -T <fixed_timeout>
{% if ansible_os_family == "RedHat" %}
external_acl_type splash_page ttl=60 concurrency=100 %DST /usr/lib64/squid/ext_session_acl -t {{ squid_splash_timeout }} -b /var/lib/squid/session.db
{% else %}
external_acl_type splash_page ttl=60 concurrency=100 %DST /usr/lib/squid/ext_session_acl -t {{ squid_splash_timeout }} -b /var/lib/squid/session.db
{% endif %}

acl existing_users external splash_page

#deny_info 511:/etc/squid/splash.html existing_users
deny_info {{ squid_splash_url }}?url=%u existing_users

http_access deny !existing_users

{% endif %}
# And finally deny all other access to this proxy
http_access deny all

# Squid normally listens to port 3128
{% if not squid_https %}
http_port {{ squid_http_port_listen }}
{% else %}
http_port {{ squid_http_port_listen }}
# Transparent, https://wiki.squid-cache.org/ConfigExamples/Intercept/LinuxRedirect
# https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery
http_port {{ squid_http_port_intercept_listen }} intercept
{# Only redhat with openssl support, latest debian/ubuntu with gnutls but missing cert generators #}
{% if ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 8 %}
# https://wiki.squid-cache.org/ConfigExamples/Intercept/SslBumpExplicit
http_port {{ squid_http_port_ssl_listen }} ssl-bump \
  cert={{ ssl_dir }}/squid-{{ ansible_fqdn }}.crt \
  key={{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.key \
  generate-host-certificates=on dynamic_cert_mem_cache_size=4MB

sslcrtd_program /usr/lib64/squid/ssl_crtd \
  -s /var/lib/squid/ssl_db -M 4MB
sslcrtd_children 8 startup=1 idle=1

#sslproxy_cafile /usr/local/openssl/cabundle.file

# https://wiki.squid-cache.org/ConfigExamples/Intercept/SslBumpExplicit#Hardening
sslproxy_options NO_SSLv2,NO_SSLv3,SINGLE_DH_USE

sslproxy_cipher EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS

# troubleshooting
sslproxy_cert_error allow all
sslproxy_flags DONT_VERIFY_PEER

{% elif (ansible_distribution == "Ubuntu" and squid_https) or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8) %}
#
# squid-4 only
#
sslcrtd_program /usr/lib/squid/security_file_certgen -s /var/lib/squid/ssl_db -M 4MB
#tls_outgoing_options cafile=/usr/local/openssl/cabundle.file

tls_outgoing_options options=NO_SSLv3

{% endif %}

# https://wiki.squid-cache.org/Features/SslPeekAndSplice
acl step1 at_step SslBump1
acl step2 at_step SslBump2
acl step3 at_step SslBump3

acl ssl_exclude_domains ssl::server_name "/etc/squid/no-proxy-domains.conf"
acl ssl_exclude_ips     dst              "/etc/squid/no-proxy-ips.conf"

ssl_bump splice localhost
ssl_bump peek step1 all
ssl_bump splice ssl_exclude_domains
ssl_bump splice ssl_exclude_ips
ssl_bump stare step2 all
ssl_bump bump all

# or SSL-Bump + exceptions
# acl DiscoverSNIHost at_step SslBump1
# acl NoSSLIntercept ssl::server_name_regex "/etc/squid/no-proxy.txt"
# ssl_bump peek DiscoverSNIHost
# ssl_bump splice NoSSLIntercept
# ssl_bump bump all

# http://www.squid-cache.org/Doc/config/https_port/
# https://wiki.squid-cache.org/Features/HTTPS
#https_port 3129 tls-min-version=1.2
{% endif %}

# if sslbump / tls interception, squid will break websockets as not supported
# http://lists.squid-cache.org/pipermail/squid-users/2017-January/013953.html
# https://askubuntu.com/questions/936015/squid3-proxy-server-ssl-bump-blocking-web-socket-connections
# https://www.cisco.com/c/en/us/td/docs/voice_ip_comm/cloudCollaboration/spark/hybridservices/datasecurity/cmgt_b_hybrid-data-security/cmgt_b_hybrid-data-security_appendix_01010.pdf
# Test: https://www.websocket.org/echo.html
# you need either to exclude corresponding domains, either enable following line
#on_unsupported_protocol tunnel all

# Leave coredumps in the first cache dir
coredump_dir {{ squid_spool }}

{% if squid_log_querystrings is defined and squid_log_querystrings %}
# Do you want to keep query strings? have privacy consequence.
strip_query_terms off
{% endif %}

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
# Images
refresh_pattern -i \.(gif|png|jpeg|jpg|bmp|tif|tiff|ico)(\?.*|$) 10080 50% 43200 override-expire override-lastmod reload-into-ims ignore-reload ignore-no-cache ignore-auth ignore-private
#refresh_pattern (Release|Packages(.gz)*)$      0       20%     2880
# example lin deb packages
#refresh_pattern (\.deb|\.udeb)$   129600 100% 129600
refresh_pattern .               0       20%     4320

# ANONYMOUS/Privacy PROXY
# (but Via off will generate Warning at each start...)
{% if squid_via_disable %}
via off
{% else %}
via on
{% endif %}
# http://www.squid-cache.org/Doc/config/forwarded_for/
forwarded_for delete
request_header_access Allow allow all
request_header_access Authorization allow all
request_header_access WWW-Authenticate allow all
request_header_access Proxy-Authorization allow all
request_header_access Proxy-Authenticate allow all
request_header_access Cache-Control allow all
request_header_access Content-Encoding allow all
request_header_access Content-Length allow all
request_header_access Content-Type allow all
request_header_access Date allow all
request_header_access Expires allow all
request_header_access Host allow all
request_header_access If-Modified-Since allow all
request_header_access Last-Modified allow all
request_header_access Location allow all
request_header_access Pragma allow all
#request_header_access Accept allow all
header_replace 	      Accept */*
request_header_access Accept-Charset allow all
#request_header_access Accept-Encoding allow all
header_replace        Accept-Encoding         *
request_header_access Accept-Language allow all
request_header_access Content-Language allow all
request_header_access Mime-Version allow all
request_header_access Retry-After allow all
request_header_access Title allow all
request_header_access Connection allow all
request_header_access Proxy-Connection allow all
request_header_access User-Agent allow all
#header_replace        User-Agent OurBrowser/1.0 (Some Name)
request_header_access Cookie allow all
request_header_access Server deny all
request_header_access X-Forwarded-For deny all
request_header_access All deny all
{% if squid_urlfiltering_tool == 'dansguardian' or squid_urlfiltering_tool == 'e2guardian' %}
{# http://squid.sourceforge.net/follow_xff/ #}
{# https://gist.github.com/alvarow/fa409edc70aeb4cf89bbc83c1c78f392 #}
follow_x_forwarded_for allow localhost
acl_uses_indirect_client on
delay_pool_uses_indirect_client on
log_uses_indirect_client on
{% else %}
follow_x_forwarded_for deny all
{% endif %}

# Cache (mostly for deb/rpm)
## maximum_object_size should be before cache_dir
## http://squid-web-proxy-cache.1019090.n4.nabble.com/Problem-with-caching-larger-files-td4666004.html#a4666006
## https://tails.boum.org/contribute/build/squid-deb-proxy/squid-deb-proxy.conf
maximum_object_size 1 GB
#cache_dir ufs {{ squid_spool }} 100 16 256
cache_dir ufs {{ squid_spool }} 70000 16 256
cache_replacement_policy heap LFUDA
refresh_pattern deb$           129600 100%     129600
refresh_pattern udeb$          129600 100%     129600
refresh_pattern tar.gz$        129600 100%     129600
refresh_pattern DiffIndex$      0       20%     4320 refresh-ims
refresh_pattern PackagesIndex$  0       20%     4320 refresh-ims
refresh_pattern Packages\.bz2$  0       20%     4320 refresh-ims
refresh_pattern Packages\.gz$   0       20%     4320 refresh-ims
refresh_pattern Packages\.lzma$ 0       20%     4320 refresh-ims
refresh_pattern SourcesIndex$   0       20%     4320 refresh-ims
refresh_pattern Sources\.bz2$   0       20%     4320 refresh-ims
refresh_pattern Sources\.gz$    0       20%     4320 refresh-ims
refresh_pattern Sources\.lzma$  0       20%     4320 refresh-ims
refresh_pattern Release$        0       20%     4320 refresh-ims
refresh_pattern Release\.gpg$   0       20%     4320 refresh-ims
refresh_pattern Translation-en\.bzip2$ 0       20%     4320 refresh-ims
refresh_pattern Translation-en\.bz2$   0       20%     4320 refresh-ims
refresh_pattern Translation-en\.gz$    0       20%     4320 refresh-ims
refresh_pattern Translation-en\.lzma$  0       20%     4320 refresh-ims
refresh_pattern Translation-fr\.bzip2$ 0       20%     4320 refresh-ims
refresh_pattern Translation-fr\.bz2$   0       20%     4320 refresh-ims
refresh_pattern Translation-fr\.gz$    0       20%     4320 refresh-ims
refresh_pattern Translation-fr\.lzma$  0       20%     4320 refresh-ims
#refresh_pattern -i .rpm$ 	129600 	100%	129600 refresh-ims override-expire
#refresh_pattern -i .iso$ 	129600 	100% 	129600 refresh-ims override-expire
refresh_pattern -i .rpm$ 	129600 	100%	129600 refresh-ims
refresh_pattern -i .iso$ 	129600 	100% 	129600 refresh-ims
refresh_pattern .               0       20%     4320

# handle meta-release and changelogs.ubuntu.com special
refresh_pattern changelogs.ubuntu.com/*  0  1% 1

# see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=499379
refresh_all_ims on

## direct access?
#acl local-servers dstdomain my.domain.net
#always_direct allow local-servers
#acl FTP proto FTP
#always_direct allow FTP

# WARNING: excludetrace_xxx ACL is used in context without an HTTP request. Assuming mismatch.
# http://squid-web-proxy-cache.1019090.n4.nabble.com/ACL-is-used-in-context-without-an-HTTP-response-Assuming-mismatch-td4677540.html
#access_log none excludetrace proto_http

{% if (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18) or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) %}
access_log stdio:/var/log/squid/access.log squid
## Customize logging
## http://www.squid-cache.org/Doc/config/logformat/
logformat customlogformat %tl %>a "%rm %ru HTTP/%rv" %>Hs %<st "%{Referer}>h" "%{User-Agent}>h" %Ss:Sh
access_log stdio:{{ squid_customlog_path }} customlogformat
{% else %}
access_log /var/log/squid/access.log squid
## Customize logging
## http://www.squid-cache.org/Doc/config/logformat/
logformat customlogformat %tl %>a "%rm %ru HTTP/%rv" %>Hs %<st "%{Referer}>h" "%{User-Agent}>h" %Ss:Sh
access_log {{ squid_customlog_path }} customlogformat
{% endif %}
# human-readable time?
#logformat squid %tg.%03tu %6tr %>a %Ss/%03Hs %
{% if squid_jsonlog is defined and squid_jsonlog %}
# https://gist.github.com/ryanbreed/57464e9db1ca162d92aa221696a84a76
# https://wiki.squid-cache.org/Features/LogFormat
logformat jsonExtended {\
  "sn":%sn,"timestamp":%ts.%03tu,\
  "time":"%{{ '{%' }}Y-%m-%dT%H:%M:%S%z}tg",\
  "time_local":"%tl",\
  "conn":{"src_ip":"%>a","dst_ip":"%<a","dst_fqdn":"%<A","dst_port":"%<p"},\
  "req":{\
    "bytes":%>st,"headerBytes":%>sh,\
    "method":"%rm","url":"%>ru","scheme":"%>rs","domain":"%>rd","path":"%>rp",\
    "ua":"%{User-Agent}>h","referer":"%{Referer}>h","cookie":"%{Cookie}>h",\
    "accLang":"%{Accept-Language}>h","accEnc":"%{Accept-Encoding}>h",\
    "host":"%{Host}>h","origin":"%{Origin}>h","accept":"%{Accept}>h",\
    "xReqWith":"%{X-Requested-With}>h"\
  },\
  "resp":{\
    "bytes":%<st,"headerBytes":%<sh,\
    "code_nexthop":"%<Hs",\
    "code_c":"%>Hs",\
    "mime-type":"%mt",\
    "transferEncoding":"%{Transfer-Encoding}<h",\
    "setCookie":"%{Set-Cookie}<h",\
    "contentType":"%{Content-Type}<h",\
    "contentLength":"%{Content-Length}<h",\
    "contentEncoding":"%{Content-Encoding}<h",\
    "server":"%{Server}<h"\
  },\
  "bytes":{"body":"%<bs","total":%st}{% if squid_https %},\
  "ssl":{\
    "subject_c":"%ssl::>cert_subject","issuer_c":"%ssl::>cert_issuer",\
{% if not (ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 7) %}
{# squid 3.5 - http://www.squid-cache.org/Versions/v3/3.5/cfgman/logformat.html #}
    "subject_s":"%ssl::<cert_subject","issuer_s":"%ssl::<cert_issuer",\
    "errors_s":"%ssl::<cert_errors",\
    "ssl_nego_c":"%ssl::>negotiated_version","ssl_nego_s":"%ssl::<negotiated_version",\
{% endif %}
    "sni_c":"%ssl::>sni"\
  }\
{% else %} \
{% endif %}
 \
}
{% if (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18) or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) %}
access_log stdio:/var/log/squid/access_json.log jsonExtended
{% else %}
access_log /var/log/squid/access_json.log jsonExtended
{% endif %}

{% endif %}
{% if squid_remotesyslog %}
## TCP logging
access_log {{ squid_remotesyslog_target | default('tcp://192.168.1.254:514') }} jsonExtended
{% endif %}

{% if squid_urlfiltering_enable is defined and squid_urlfiltering_enable and squid_urlfiltering_tool == 'squidguard' %}
url_rewrite_program /usr/bin/squidGuard -c /etc/squid/squidGuard.conf

{% endif %}

# https://www.edv-huber.com/index.php/problemloesungen/22-squid-proxy-server-filter-urls-by-virustotal-com
# https://blog.rootshell.be/2014/12/15/automatic-mime-parts-scanning-with-virustotal/

# debug
# https://wiki.squid-cache.org/KnowledgeBase/DebugSections
{% if squid_testing_debug %}
debug_options ALL,1 33,2 28,9 82,9
{% else %}
#debug_options ALL,1 33,2 28,9
{% endif %}
