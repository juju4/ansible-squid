---
# compile with openssl to support https
# https://docs.diladele.com/howtos/build_squid_4_on_ubuntu/index.html

- name: Ubuntu | Enable universe repository
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
  loop:
    - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release | lower }} universe"
    - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release | lower }}-updates universe"

- name: Ubuntu | Enable universe security repository
  ansible.builtin.lineinfile:
    dest: /etc/apt/sources.list
    mode: '0644'
    owner: root
    regexp: "^deb http://security.ubuntu.com/ubuntu/ {{ ansible_distribution_release | lower }}-security universe"
    line: "deb http://security.ubuntu.com/ubuntu/ {{ ansible_distribution_release | lower }}-security universe"

- name: Ensure squid build dir exists
  ansible.builtin.file:
    dest: "{{ squidbuild_dir }}"
    state: directory
    mode: '0700'

- name: Squid openssl | Check if orchestrator has deb
  ansible.builtin.stat:
    path: "{{ orchestrator_files_archives }}/squid_{{ squid_pkg }}_amd64.deb"
  register: squiddeb
  delegate_to: localhost

- name: Squid openssl deb
  when: not squiddeb.stat.exists
  block:
    - name: Squid openssl | install build and report tools
      ansible.builtin.apt:
        pkg: "{{ squidbuild_pkgs + squidhttps_pkgs + squid_report_pkgs | default(omit) }}"
        state: present
        update_cache: yes
        cache_valid_time: 3600
      register: pkg_result
      until: pkg_result is success

    - name: Get diladele patches
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "{{ squidbuild_dir }}/{{ item | basename }}"
        mode: '0600'
      with_items:
        - https://raw.githubusercontent.com/diladele/squid-ubuntu/e4b640aad98b732147ba0fa9be0ccccbe4d8a87f/src/ubuntu18/rules.patch
        - "http://http.debian.net/debian/pool/main/s/squid/squid_{{ squid_pkg }}.dsc"
        - "http://http.debian.net/debian/pool/main/s/squid/squid_{{ squid_ver }}.orig.tar.xz"
        - "http://http.debian.net/debian/pool/main/s/squid/squid_{{ squid_ver }}.orig.tar.xz.asc"
        - "http://http.debian.net/debian/pool/main/s/squid/squid_{{ squid_pkg }}.debian.tar.xz"
      register: dl_result
      until: dl_result is success

    - name: Squid openssl | unpack source
      ansible.builtin.command: "dpkg-source -x squid_{{ squid_pkg }}.dsc"
      args:
        chdir: "{{ squidbuild_dir }}"
        creates: "{{ squidbuild_dir }}/squid-{{ squid_ver }}/debian/rules"

    - name: Squid openssl | patch rules
      ansible.posix.patch:
        src: "{{ squidbuild_dir }}/rules.patch"
        dest: "{{ squidbuild_dir }}/squid-{{ squid_ver }}/debian/rules"
        remote_src: true
      when: ansible_distribution_release == 'bionic'

    - name: Squid openssl | build package - be patient...
      # command: dpkg-buildpackage -rfakeroot -b
      # command: dpkg-buildpackage -rfakeroot -b -k{{ debsign_gpg_user_email }}
      ## without signing else set up a gpg key before
      ansible.builtin.command: dpkg-buildpackage -rfakeroot -b -uc -us -d
      args:
        chdir: "{{ squidbuild_dir }}/squid-{{ squid_ver }}"
        creates: "{{ squidbuild_dir }}/squid_{{ squid_pkg }}_amd64.deb"
      async: 3600
      poll: 0
      register: dpkgbuild

    - name: Squid openssl | check on async task for pkg building
      ansible.builtin.async_status:  # noqa no-handler
        jid: "{{ dpkgbuild.ansible_job_id }}"
      register: job_result
      until: job_result.finished or dpkgbuild.finished
      retries: 60
      delay: 60
      when: dpkgbuild is changed

    - name: Squid openssl | Recover file on orchestrator
      ansible.builtin.fetch:
        src: "{{ item }}"
        dest: "{{ orchestrator_files_archives }}/"
        flat: yes
      with_items:
        - "{{ squidbuild_dir }}/squid-common_{{ squid_pkg }}_all.deb"
        - "{{ squidbuild_dir }}/squid_{{ squid_pkg }}_amd64.deb"
        - "{{ squidbuild_dir }}/squidclient_{{ squid_pkg }}_amd64.deb"

- name: Squid openssl | Recover file on orchestrator
  ansible.builtin.copy:
    src: "{{ orchestrator_files_archives }}/{{ item }}"
    dest: "{{ squidbuild_dir }}/"
    mode: '0644'
  with_items:
    - "squid-common_{{ squid_pkg }}_all.deb"
    - "squid_{{ squid_pkg }}_amd64.deb"
    - "squidclient_{{ squid_pkg }}_amd64.deb"
  when: squiddeb.stat.exists

- name: Squid openssl | install locally build package
  ansible.builtin.apt:
    deb: "{{ item }}"
  with_items:
    - "{{ squidbuild_dir }}/squid-common_{{ squid_pkg }}_all.deb"
    - "{{ squidbuild_dir }}/squid_{{ squid_pkg }}_amd64.deb"
    - "{{ squidbuild_dir }}/squidclient_{{ squid_pkg }}_amd64.deb"
  register: squiddeb
  ignore_errors: true
- name: Deb install
  when: squiddeb is failed and ansible_distribution_release != '20.04'
  block:
    # if install with dpkg, not executing /etc/apt/apt.conf.d/99security and /etc/init.d is immutable
    #       OK with apt install
    - name: Import immutable
      ansible.builtin.import_tasks: immutable.yml
      vars:
        target_dir: /etc/init.d/
        state: pre
    - name: Import immutable
      ansible.builtin.import_tasks: immutable.yml
      vars:
        target_dir: /etc/init.d/squid
        state: pre
    - name: Import immutable
      ansible.builtin.import_tasks: immutable.yml
      vars:
        target_dir: /lib/systemd/system
        state: pre
    - name: Import immutable
      ansible.builtin.import_tasks: immutable.yml
      vars:
        target_dir: /lib/systemd/system/squid.service
        state: pre
    - name: Squid openssl | install locally build package (immutable)
      ansible.builtin.apt:
        deb: "{{ item }}"
      with_items:
        - "{{ squidbuild_dir }}/squid-common_{{ squid_pkg }}_all.deb"
        - "{{ squidbuild_dir }}/squid_{{ squid_pkg }}_amd64.deb"
        - "{{ squidbuild_dir }}/squidclient_{{ squid_pkg }}_amd64.deb"
    - name: Import immutable
      ansible.builtin.import_tasks: immutable.yml
      vars:
        target_dir: /etc/init.d/
        state: post
    - name: Import immutable
      ansible.builtin.import_tasks: immutable.yml
      vars:
        target_dir: /lib/systemd/system
        state: post

- name: Squid openssl | prevent packages from being upgraded automatically
  ansible.builtin.dpkg_selections:
    name: squid
    selection: hold
