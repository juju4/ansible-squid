---
# review /etc/dansguardian/lists/ for content filtering rules
# if whitelisting mode: http://askubuntu.com/questions/569102/how-to-use-dansguardian-as-a-whitelist

- name: Install dansguardian package
  ansible.builtin.package:
    name: dansguardian
    state: present
  register: pkg_result
  until: pkg_result is success

- name: Import clamd
  ansible.builtin.import_tasks: clamd.yml
  when: squid_dansguardian_clamd | bool

- name: Dansguardian | review settings
  ansible.builtin.replace:
    dest: /etc/dansguardian/dansguardian.conf
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
    mode: '0644'
    backup: yes
  with_items:
    - { re: '^UNCONFIGURED - Please remove this line', rep: '#UNCONFIGURED - Please remove this line' }
    - { re: "^filterip =.*", rep: "filterip = {{ squid_dansguardian_filterip }}" }
    # - { re: "^proxyip =.*", rep: "proxyip = {{ squid_dansguardian_proxyip }}" }
    - { re: "^#daemonuser = 'dansguardian'", rep: "daemonuser = 'proxy'" }
    - { re: "^#daemongroup = 'dansguardian'", rep: "daemongroup = 'proxy'" }
    - { re: "^accessdeniedaddress = .*", rep: "accessdeniedaddress = '{{ squid_dansguardian_deniedaddress }}'" }
    - { re: "^loglevel = .*", rep: "loglevel = {{ squid_dansguardian_loglevel }}" }
    - { re: "^loguseragent = .*", rep: "loguseragent = on" }
    # - { re: "^nologger = .*", rep: "nologger = on" }
    - { re: "#loglocation = .*", rep: "loglocation = '/var/log/dansguardian/access.log'" }
    - { re: "^language = '.*'", rep: "language = '{{ squid_dansguardian_language }}'" }
    - { re: "^forwardedfor = .*", rep: "forwardedfor = on" }
    # - { re: "^usexforwardedfor = '.*'", rep: "usexforwardedfor = on" }
  notify:
    - Restart dansguardian

- name: Dansguardian | review settings for clamscan
  ansible.builtin.replace:
    dest: /etc/dansguardian/dansguardian.conf
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
    mode: '0644'
    backup: yes
  with_items:
    - { re: "^#contentscanner = '/etc/dansguardian/contentscanners/clamdscan.conf'",
        rep: "contentscanner = '/etc/dansguardian/contentscanners/clamdscan.conf'"
    }
  notify:
    - Restart dansguardian
  when: squid_dansguardian_clamd | bool

- name: Dansguardian | review clamdscan settings
  ansible.builtin.replace:
    dest: /etc/dansguardian/contentscanners/clamdscan.conf
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
    mode: '0644'
    backup: yes
  with_items:
    - { re: "^clamdudsfile = .*", rep: "clamdudsfile = /tmp/clamd.ctl" }
  notify:
    - Restart dansguardian
  when: squid_dansguardian_clamd | bool

- name: Check few permissions
  ansible.builtin.file:
    dest: "/var/log/dansguardian"
    state: "directory"
    mode: "0755"
    owner: "{{ squid_user }}"
    group: "{{ squid_user }}"

- name: Check log file exists
  ansible.builtin.stat:
    path: /var/log/dansguardian.log
  register: danl

- name: Touch log file
  ansible.builtin.file:
    path: /var/log/dansguardian.log
    state: touch
    owner: "{{ squid_user }}"
    mode: '0600'
  when: not danl.stat.exists

- name: Import dansguardian-template
  ansible.builtin.import_tasks: dansguardian-template.yml

- name: Ensure dansguardian is started and enabled
  ansible.builtin.service:
    name: dansguardian
    state: started
    enabled: yes
