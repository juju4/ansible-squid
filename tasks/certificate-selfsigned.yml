---

- include_tasks: travis.yml

- name: Ensure openssl is present
  package:
    name: "{{ openssl_pkgs | default(['openssl', 'python3-pip', 'python3-setuptools', 'python3-openssl' ]) }}"
    state: present
  register: pkg_result
  until: pkg_result is success

- name: apt | self-signed certificate packages dependencies
  apt:
    name: ssl-cert
    state: present
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  register: pkg_result
  until: pkg_result is success

- name: Ensure python cryptography is present
  pip:
    name: cryptography
    state: present
    executable: "{{ squid_cryptography | default('pip3') }}"

- name: Check if OpenSSL private key exists
  stat:
    path: "{{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.key"
  register: private_key

- name: Generate an OpenSSL private key
  openssl_privatekey:
    path: "{{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.key"
  when: not private_key.stat.exists

- name: Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: "{{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.csr"
    privatekey_path: "{{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.key"
    organization_name: "{{ squid_cert_orgname | default('Ansible') }}"
    common_name: "{{ certificate_cn }}"
    subject_alt_name: "{{ squid_cert_san | default(omit) }}"
    email_address: "{{ squid_cert_email | default(omit) }}"
    basic_constraints:
      # - 'critical'
      - 'CA:TRUE'

- name: Generate SSL self-signed certificate
  openssl_certificate:
    path: "{{ ssl_dir }}/squid-{{ ansible_fqdn }}.crt"
    privatekey_path: "{{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.key"
    csr_path: "{{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.csr"
    ownca_not_after: "{{ squid_certduration | default('+365d') }}"
    provider: selfsigned
  notify: restart squid

- name: Validate private key file permissions
  file:
    path: "{{ ssl_privatedir }}/squid-{{ ansible_fqdn }}.key"
    owner: "root"
    group: "{% if ansible_os_family == 'Debian' %}ssl-cert{% else %}root{% endif %}"
    mode: '0440'

- name: Ensure CA file available in der format
  command: >
    openssl x509 -in {{ ssl_dir }}/squid-{{ ansible_fqdn }}.crt
        -outform DER
        -out {{ ssl_dir }}/squid-{{ ansible_fqdn }}.der
  args:
    creates: "{{ ssl_dir }}/squid-{{ ansible_fqdn }}.der"
