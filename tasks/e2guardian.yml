---

- name: install e2guardian package
  package:
    name: e2guardian
    state: present
  register: pkg_result
  until: pkg_result is success

- name: e2guardian | review settings
  replace:
    dest: /etc/e2guardian/e2guardian.conf
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
    backup: yes
  with_items:
    - { re: '^UNCONFIGURED - Please remove this line', rep: '#UNCONFIGURED - Please remove this line' }
    - { re: "^filterip =.*", rep: "filterip = {{ squid_e2guardian_filterip }}" }
#    - { re: "^proxyip =.*", rep: "proxyip = {{ squid_e2guardian_proxyip }}" }
    - { re: "^#daemonuser = 'e2guardian'", rep: "daemonuser = 'proxy'" }
    - { re: "^#daemongroup = 'e2guardian'", rep: "daemongroup = 'proxy'" }
    - { re: "^accessdeniedaddress = .*", rep: "accessdeniedaddress = '{{ squid_e2guardian_deniedaddress }}'" }
    - { re: "^loglevel = .*", rep: "loglevel = {{ squid_e2guardian_loglevel }}" }
    - { re: "^loguseragent = .*", rep: "loguseragent = on" }
#    - { re: "^nologger = .*", rep: "nologger = on" }
    - { re: "#loglocation = .*", rep: "loglocation = '/var/log/e2guardian/access.log'" }
    - { re: "^language = '.*'", rep: "language = '{{ squid_e2guardian_language }}'" }
    - { re: "^forwardedfor = .*", rep: "forwardedfor = on" }
#    - { re: "^usexforwardedfor = '.*'", rep: "usexforwardedfor = on" }
  notify:
    - restart e2guardian

- name: check few permissions
  file: "dest=/var/log/e2guardian state=directory mode=0755 owner={{ squid_user }} group={{ squid_user }}"

- name: check log file exists
  stat:
    path: /var/log/e2guardian.log
  register: e2l

- name: touch log file
  file:
    path: /var/log/e2guardian.log
    state: touch
    owner: "{{ squid_user }}"
    mode: '0600'
  when: not e2l.stat.exists

- include: e2guardian-template.yml

- name: ensure e2guardian is started and enabled
  service:
    name: e2guardian
    state: started
    enabled: yes
